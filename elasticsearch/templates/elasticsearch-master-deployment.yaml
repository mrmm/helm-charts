apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "master_name" . }}
  #namespace: {{ template "namespace" . }}
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    component: "{{.Release.Name}}-{{.Values.Component}}"
    cluster-name: {{ template "cluster_name" . }}
    env: {{ .Values.Cluster.Env | quote }}
    type: master
  annotations:
    helm.sh/created: {{.Release.Time.Seconds | quote }}
    cluster-name: {{ template "cluster_name" . }}
    env: {{ .Values.Cluster.Env | quote }}
spec:
  replicas: {{ .Values.Master.Replicas }}
  template:
    metadata:
      labels:
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: "{{.Chart.Name}}-{{.Chart.Version}}"
        component: "{{.Release.Name}}-{{.Values.Component}}"
        cluster-name: {{ template "cluster_name" . }}
        env: {{ .Values.Cluster.Env | quote }}
        type: master
    spec:
      serviceAccountName: {{ template "service_account" . }}
      {{ template "node_selector" . }}
      containers:
      - name: elasticsearch
        {{ template "security_context" . }}
        env:
        - name: DISCOVERY_SERVICE
          value: {{ template "discover_service" . }}
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_TYPE
          value: {{ template "master_node" . }}
        - name: ES_HEAP_SIZE
          value: "{{.Values.Master.HeapSize}}"
        - name: BOOTSTRAP_MLOCKALL
          value: "true"
        - name: CLUSTER_NAME
          value: {{ template "cluster_name" . }}
        - name: DATA_PATH
          value: {{ .Values.Cluster.Path.Data | quote }}
        - name: LOGS_PATH
          value: {{ .Values.Cluster.Path.Logs | quote }}
        resources:
          requests:
            cpu: "{{.Values.Master.Cpu.Requests}}"
            memory: "{{.Values.Master.Memory.Requests}}"
          limits:
            cpu: "{{.Values.Master.Cpu.Limits}}"
            memory: "{{.Values.Master.Memory.Limits}}"
        {{ if .Values.HealthCheck.Enabled }}
        livenessProbe:
          httpGet:
            path: /
            port: 9300
          initialDelaySeconds: 50
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /
            port: 9300
          timeoutSeconds: 5
        {{ end }}
        image: "{{.Values.Image}}:{{.Values.ImageTag}}"
        imagePullPolicy: "{{.Values.ImagePullPolicy}}"
        ports:
        - containerPort: 9300
          name: transport
